#!/bin/bash

set -euo pipefail

. shell-getopt

PROG="${0##*/}"
PROG_VERSION="0.0.1"

cmd="run"
global_retval=0

print_version(){
    cat <<EOF
Версия программы $PROG - $PROG_VERSION
EOF
    exit
}

show_usage(){
    cat <<EOF
$PROG - инструмент диагностики состояния контроллера домена

Формат вызова: $PROG [options] [<diagnostic-task>]

Опции:
-l, --list		Список диагностических задач
-v, --version		Вывод версии утилиты
-h, --help		Показать данную справку и выйти
EOF
    exit
}

TEMP=$(getopt -n "$PROG" -o "l,v,r,h", -l "list,version,report,help" -- "$@") || show_usage
eval set -- "$TEMP"

while true; do
    case "$1" in
	-l|--list) cmd="list"; shift ;;
	-v|--version) print_version; shift ;;
	-r|--report) shift; ;;
	-h|--help) show_usage; shift ;;
	--) shift; break ;;
	*) fatal "Неверное значение: $1" ;;
    esac
done

task_list="$*"

task_show(){
    local func="$1"
    echo "$func"
}

task_run(){
    local retval=126
    local func="$1"

    if test -n "$task_list"; then
	echo "$task_list" | tr ' ' '\n' | grep -q "^$func\$" || return 0
    fi

    $func && retval=0 || retval="$?"
    test $retval=0 || global_retval=1

    return $retval
}

task(){
    local task="$1"
    
    case "$cmd" in
	list) task_show "$task" ;;
	report) ;;
# Тут добавить условие на код ошибки (вывод [WARN], когда код ошибки у теста = 2)
	run) task_run "$task" && echo -e "[DONE]: $task\n" || echo "[FAIL]: $task\n" ;;
	*) fatal "Неверное значение: $cmd" ;;
    esac
}

is_not_empty_sysvol(){
    local retval=0
    local command="ls -A "/var/lib/samba/sysvol""

    if [ -n "$(ls -A "/var/lib/samba/sysvol" 2> /dev/null)" ]; then
	echo "Каталог "sysvol" содержит следующие файлы:"
	$command
    else
    echo "Каталог "sysvol" пустой."
	retval=2
    fi

    return $retval
}

samba_version(){
    local retval=0
    local packet_name="samba"
    local policy_output="$(rpm -qi "$packet_name" 2> /dev/null)"
    local version="$(echo "$policy_output" | grep "Version" | awk '{print $NF}')"
    local release="$(echo "$policy_output" | grep "Release" | awk '{print $NF}')"
    local tag="$(echo "$policy_output" | grep "DistTag" | awk '{print $NF}')"
    local installed_version=""$version"-"$release":"$tag""

    if [ -z "$installed_version" ]; then
	echo -e "Пакет "$packet_name" не установлен в системе."
	retval=1
    else
	echo -e "Версия установленного пакета "$packet_name": "$installed_version"."
    fi

    return $retval
}

task is_not_empty_sysvol
task samba_version

exit "$global_retval"